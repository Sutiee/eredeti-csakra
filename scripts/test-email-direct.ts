/**
 * Direct Email Testing Script (Resend API)
 *
 * Tests the email sending directly using Resend API
 * Bypasses the Next.js API route to test templates
 *
 * Usage:
 * npx tsx scripts/test-email-direct.ts
 */

import { config } from 'dotenv';
import { resolve } from 'path';
import { Resend } from 'resend';
import {
  generatePurchaseConfirmationEmail,
  generatePurchaseConfirmationEmailText,
} from '../lib/email/templates';

// Load environment variables
config({ path: resolve(process.cwd(), '.env.local') });

const TEST_EMAIL = 'laszlo.s.szabo@ecomxpert.hu';
const TEST_NAME = 'Teszt L√°szl√≥';
const TEST_RESULT_ID = '00000000-0000-0000-0000-000000000000';

interface TestEmailParams {
  productType: 'ai_analysis_pdf' | 'workbook_30day';
  productName: string;
}

async function sendTestEmail(
  resend: Resend,
  params: TestEmailParams
): Promise<void> {
  const { productType, productName } = params;

  console.log('\nüìß Teszt email k√ºld√©se...');
  console.log(`   Term√©k t√≠pus: ${productType}`);
  console.log(`   Term√©k n√©v: ${productName}`);
  console.log(`   Email c√≠m: ${TEST_EMAIL}`);
  console.log(`   N√©v: ${TEST_NAME}`);

  try {
    // Generate email content using our templates
    const emailHtml = generatePurchaseConfirmationEmail({
      name: TEST_NAME,
      downloadUrl: 'https://example.com/test-pdf-download-link',
      resultId: TEST_RESULT_ID,
      productName: productName,
      productType: productType,
    });

    const emailText = generatePurchaseConfirmationEmailText({
      name: TEST_NAME,
      downloadUrl: 'https://example.com/test-pdf-download-link',
      resultId: TEST_RESULT_ID,
      productName: productName,
      productType: productType,
    });

    // Dynamic subject line
    const subject =
      productType === 'workbook_30day'
        ? 'K√©szen √°ll a 30 Napos Csakra Munkaf√ºzeted! üìñ'
        : 'K√∂sz√∂nj√ºk a v√°s√°rl√°sod! - Szem√©lyre Szabott Csakra Elemz√©sed';

    // Send email with Resend
    const { data, error } = await resend.emails.send({
      from: 'onboarding@resend.dev', // Use Resend's test domain
      to: [TEST_EMAIL],
      subject: `[TESZT] ${subject}`,
      html: emailHtml,
      text: emailText,
      tags: [
        { name: 'type', value: 'test-email' },
        { name: 'product_type', value: productType },
        { name: 'result_id', value: TEST_RESULT_ID },
      ],
    });

    if (error) {
      console.error('‚ùå Resend API hiba:', error);
      throw new Error(`Resend error: ${JSON.stringify(error)}`);
    }

    console.log('‚úÖ Email sikeresen elk√ºldve!');
    console.log(`   Email ID: ${data?.id}`);
    console.log(`   Resend Dashboard: https://resend.com/emails/${data?.id}`);
  } catch (error) {
    console.error('‚ùå Hiba t√∂rt√©nt:', error);
    throw error;
  }
}

async function runTests(): Promise<void> {
  console.log('üß™ Direct Email Teszt Program (Resend API)');
  console.log('='.repeat(60));

  // Ellen≈ërizz√ºk a sz√ºks√©ges k√∂rnyezeti v√°ltoz√≥kat
  if (!process.env.RESEND_API_KEY) {
    console.error('‚ùå Hi√°nyz√≥ RESEND_API_KEY k√∂rnyezeti v√°ltoz√≥!');
    process.exit(1);
  }

  console.log('\n‚úÖ K√∂rnyezeti v√°ltoz√≥k rendben');
  console.log(
    `   RESEND_API_KEY: ${process.env.RESEND_API_KEY.substring(0, 10)}...`
  );
  console.log(
    `   Test from: onboarding@resend.dev (Resend test domain)`
  );
  console.log(`   Test to: ${TEST_EMAIL}`);

  // Initialize Resend client
  const resend = new Resend(process.env.RESEND_API_KEY);

  try {
    // Teszt 1: AI Analysis PDF
    console.log('\n' + '='.repeat(60));
    console.log('TESZT #1: AI Csakra Elemz√©s PDF');
    console.log('='.repeat(60));
    await sendTestEmail(resend, {
      productType: 'ai_analysis_pdf',
      productName: 'Szem√©lyre Szabott Csakra Els≈ëseg√©ly Csomag',
    });

    // V√°runk 2 m√°sodpercet a k√∂vetkez≈ë email el≈ëtt
    console.log('\n‚è≥ V√°rakoz√°s 2 m√°sodperc...');
    await new Promise((resolve) => setTimeout(resolve, 2000));

    // Teszt 2: 30-Day Workbook
    console.log('\n' + '='.repeat(60));
    console.log('TESZT #2: 30 Napos Csakra Munkaf√ºzet');
    console.log('='.repeat(60));
    await sendTestEmail(resend, {
      productType: 'workbook_30day',
      productName: '30 Napos Csakra Munkaf√ºzet',
    });

    // √ñsszegz√©s
    console.log('\n' + '='.repeat(60));
    console.log('‚úÖ MINDEN TESZT SIKERES!');
    console.log('='.repeat(60));
    console.log('\nüì¨ Ellen≈ërizd az email fi√≥kodat:');
    console.log(`   ${TEST_EMAIL}`);
    console.log('\nüìä Resend Dashboard:');
    console.log('   https://resend.com/emails');
    console.log('\nüí° Tippek:');
    console.log('   - Ellen≈ërizd a spam mapp√°t is');
    console.log('   - Az emailek 1-2 percen bel√ºl meg kell, hogy √©rkezzenek');
    console.log('   - Ha nem √©rkeznek meg, ellen≈ërizd a Resend Dashboard-ot');
    console.log('\n‚ö†Ô∏è  Fontos:');
    console.log(
      '   - Ezek a teszt emailek onboarding@resend.dev c√≠mr≈ël √©rkeznek'
    );
    console.log(
      '   - Production-ban az eredeticsakra.hu domain-t kell hiteles√≠teni'
    );
    console.log(
      '   - Domain hiteles√≠t√©s: https://resend.com/domains'
    );
    console.log('');
  } catch (error) {
    console.error('\n‚ùå A teszt sikertelen volt!');
    console.error('Ellen≈ërizd a k√∂vetkez≈ëket:');
    console.error('  1. A RESEND_API_KEY helyes?');
    console.error('  2. Van internet kapcsolat?');
    console.error('  3. A Resend account akt√≠v?');
    console.error('');
    process.exit(1);
  }
}

// Futtassuk a teszteket
runTests().catch((error) => {
  console.error('Fatal error:', error);
  process.exit(1);
});
